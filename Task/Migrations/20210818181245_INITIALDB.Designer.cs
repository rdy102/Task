// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Task.Data;

namespace Task.Migrations
{
    [DbContext(typeof(TaskContext))]
    [Migration("20210818181245_INITIALDB")]
    partial class INITIALDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Task.Data.Entities.BookingOrganisation", b =>
                {
                    b.Property<int>("BookingOrganisationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("BookingID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OrganisationID")
                        .HasColumnType("int");

                    b.HasKey("BookingOrganisationID");

                    b.ToTable("BookingOrganisations");
                });

            modelBuilder.Entity("Task.Data.Entities.ContactRelationship", b =>
                {
                    b.Property<int>("ContactRelationshipID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("ContactID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OrganisationID")
                        .HasColumnType("int");

                    b.Property<int>("RelationshipType")
                        .HasColumnType("int");

                    b.HasKey("ContactRelationshipID");

                    b.HasIndex("OrganisationID");

                    b.ToTable("ContactRelationships");
                });

            modelBuilder.Entity("Task.Data.Entities.ItemSupplier", b =>
                {
                    b.Property<int>("ItemSupplierID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("ItemID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OrganisationID")
                        .HasColumnType("int");

                    b.HasKey("ItemSupplierID");

                    b.ToTable("ItemSuppliers");
                });

            modelBuilder.Entity("Task.Data.Entities.Organisation", b =>
                {
                    b.Property<int>("OrganisationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("OrganisationName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("OrganisationID");

                    b.ToTable("Organisations");
                });

            modelBuilder.Entity("Task.Data.Entities.OrganisationNumber", b =>
                {
                    b.Property<int>("OrganisationNumberID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OrganisationID")
                        .HasColumnType("int");

                    b.Property<Guid>("OrganisationNum")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("OrganisationNumberID");

                    b.HasIndex("OrganisationID");

                    b.ToTable("OrganisationNumbers");
                });

            modelBuilder.Entity("Task.Data.Entities.OrganisationRelationship", b =>
                {
                    b.Property<int>("OrganisationRelationshipID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OrganisationID")
                        .HasColumnType("int");

                    b.Property<int>("RelationshipType")
                        .HasColumnType("int");

                    b.HasKey("OrganisationRelationshipID");

                    b.HasIndex("OrganisationID");

                    b.ToTable("OrganisationRelationships");
                });

            modelBuilder.Entity("Task.Data.Entities.ContactRelationship", b =>
                {
                    b.HasOne("Task.Data.Entities.Organisation", null)
                        .WithMany("ContactRelationships")
                        .HasForeignKey("OrganisationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Task.Data.Entities.OrganisationNumber", b =>
                {
                    b.HasOne("Task.Data.Entities.Organisation", "Organisation")
                        .WithMany("OrganisationNumbers")
                        .HasForeignKey("OrganisationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organisation");
                });

            modelBuilder.Entity("Task.Data.Entities.OrganisationRelationship", b =>
                {
                    b.HasOne("Task.Data.Entities.Organisation", null)
                        .WithMany("OrganisationRelationships")
                        .HasForeignKey("OrganisationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Task.Data.Entities.Organisation", b =>
                {
                    b.Navigation("ContactRelationships");

                    b.Navigation("OrganisationNumbers");

                    b.Navigation("OrganisationRelationships");
                });
#pragma warning restore 612, 618
        }
    }
}
